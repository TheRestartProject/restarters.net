.devices {

  padding: 0 0 50px 0;

  .breadcrumb {
    margin: auto;
  }

  .pagination {
    margin-top: 0;
  }

  h2 {
    font-size: 26px;
    margin: 0 0 20px 0;
  }

  legend {
    color: $brand;
    font-size: 20px;
    font-family: $font-family-sans-serif;
  }

}

#device-table tr.active-row td {
  background-color: #ffeeba;
}

.row-compressed-xs>div.device-images {
  @include media-breakpoint-up(lg) {
    padding-left: 20px;
  }
}

.useful-repair-urls {

  .input-group {

    margin-top: 0.5rem;

    .form-control {
      border-radius: 0.25rem;

      &.error {
        border-color: red;
      }

    }

    .btn-link {
      font-size: 35px;
      color: #00B0C6;
      padding: 0 10px;
      line-height: 0px;

      &:hover {
        text-decoration: none;
      }

      span {
        position: relative;
        top: -2px;
      }

    }

    .add-url {
      display: grid;
      align-items: stretch;
    }
  }

  label {
    margin-bottom: 0 !important;
  }

}

.col-device-auto {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: normal !important;
  -ms-flex-direction: column !important;
  flex-direction: column !important;
  display: table-cell !important;
  width: auto;
  min-width: 100px;
  max-width: none;
}

td.col-device-auto {
  min-width: 100px;
}

// This is a workaround to display the input, thus displaying the placeholder. Only needed for repair_barrier field
.form-control__select_placeholder {
  .select2-container--default .select2-search--inline .select2-search__field {
    width: 250px !important;
  }
}

#side-collapse {
    padding-top: 10px;
    padding-bottom: 10px;
}

.sort-column {
   cursor: pointer;
   &:after {
       display: inline-block;
       width: 0;
       height: 0;
       margin-left: 0.255em;
       vertical-align: 0.255em;
       content: "";
       border-top: 0.3em solid;
       border-right: 0.3em solid transparent;
       border-bottom: 0;
       border-left: 0.3em solid transparent;
   }
   &.sort-column-asc:after{
       -webkit-transform: rotate(180deg);
       -moz-transform: rotate(180deg);
       transform: rotate(180deg);
   }
   &.sort-column-asc, &.sort-column-dsc {
     color: $brand;
   }
}

#device-search {
    #suitable-for-wiki {
        margin: 0 0 0 25px;
        position: relative;
        top: 2px;
    }
}

// TODO These class names could be better, once we've done more Vue refactoring.
.device-field-row {
  display: grid;
  grid-template-columns: 80px 81px auto auto;
  line-height: 1rem;
}

.device-select-row {
  display: grid;
  grid-template-columns: auto 50px;

  .btn {
    min-width: initial !important;
    color: black;
  }
}

// We cannot nest forms in HTML, but the design has the photo form showing within the rest of the form for the device.
// We therefore have the photos outside the form, and reposition them.  This will lead to overflow problems when
// there are many photos, so we add a max-height too.  We should restructure the photo section into a Vue component
// so that we can sort out the display properly without interfering with other global JS/CSS.
.photolabel {
  top: 400px;
  left: 20px;
  position: absolute;

  @include media-breakpoint-down(sm) {
    display: none !important;
  }
}

.photoform {
  .previews {
    @include media-breakpoint-down(sm) {
      display: none !important;
    }
  }

  top: 380px;
  left: 90px;
  position: absolute;
  height: 250px;
  width: 260px;
  margin-left: 16px;

  .dz-image {
    position: absolute;

    img {
      width: 80px !important;
      height: 80px !important;
    }
  }

  .dz-thumbnail {
    width: 80px !important;
    height: 80px !important;
  }

  .dz-preview {
    position: relative;
    min-width: 80px !important;
    max-width: 80px !important;
    margin-left: 16px;
    height: 86px !important;

    .dz-remove {
      position: relative;
      top: 30px;
      left: 30px;
    }
  }

  .dz-remove {
    background-image: url('../icons/cross.svg');
  }
}