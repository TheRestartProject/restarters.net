version: '3'

services:
  # PHP Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: restarters-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www:cached
    environment:
      DB_CONNECTION: mysql
      DB_HOST: restarters-db
      DB_PORT: 3306
      DB_DATABASE: restarters_db_test
      DB_USERNAME: restarters
      DB_PASSWORD: s3cr3t
      WAIT_FOR_DB: "true"
      FORCE_INIT: "${FORCE_INIT:-false}"
      HOST_GROUP_ID: ${GROUP_ID:-1000}
    networks:
      - restarters-network
    depends_on:
      - db
      - redis
      - mailhog
    healthcheck:
      test: ["CMD", "php", "-r", "if(file_exists('/var/www/storage/framework/down')) exit(1);"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: restarters-nginx
    restart: unless-stopped
    ports:
      - "8001:80"
    volumes:
      - ./:/var/www:cached
      - ./docker/nginx/restarters.conf:/etc/nginx/conf.d/default.conf
    networks:
      - restarters-network
    depends_on:
      - app

  # MySQL Database
  db:
    image: mariadb:10.6  # MariaDB has better cross-platform support
    container_name: restarters-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-restarters_db_test}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-s3cr3t}
      MYSQL_PASSWORD: ${DB_PASSWORD:-s3cr3t}
      MYSQL_USER: ${DB_USERNAME:-restarters}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - restarters-mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - restarters-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-s3cr3t}"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis
  redis:
    image: redis:alpine
    container_name: restarters-redis
    restart: unless-stopped
    networks:
      - restarters-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: restarters-phpmyadmin
    restart: unless-stopped
    ports:
      - "8002:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=restarters-db
    networks:
      - restarters-network
    depends_on:
      - db

  # MailHog for email testing
  mailhog:
    image: ${MAILHOG_IMAGE:-mailhog/mailhog}  # Use environment variable to select image
    container_name: restarters-mailhog
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - "1025:1025" # smtp server
      - "8025:8025" # web ui
    networks:
      - restarters-network

networks:
  restarters-network:
    driver: bridge

volumes:
  restarters-mysql:
    driver: local 