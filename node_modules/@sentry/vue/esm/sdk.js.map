{"version":3,"file":"sdk.js","sourceRoot":"","sources":["../src/sdk.ts"],"names":[],"mappings":";AAAA,kEAAkE;AAClE,OAAO,EAAkB,aAAa,EAAE,IAAI,IAAI,WAAW,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAElG,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AAuFnF,2DAA2D;AAC3D,IAAM,KAAK,GAAmC;IAC5C,QAAQ,EAAE,CAAC,WAAW,EAAE,aAAa,CAAC;IACtC,MAAM,EAAE,CAAC,cAAc,EAAE,SAAS,CAAC;IACnC,OAAO,EAAE,CAAC,eAAe,EAAE,WAAW,CAAC;IACvC,KAAK,EAAE,CAAC,aAAa,EAAE,SAAS,CAAC;IACjC,MAAM,EAAE,CAAC,cAAc,EAAE,SAAS,CAAC;CACpC,CAAC;AAEF,IAAM,qBAAqB,GAAG,kBAAkB,CAAC;AACjD,IAAM,mBAAmB,GAAG,MAAM,CAAC;AACnC,IAAM,wBAAwB,GAAG,qBAAqB,CAAC;AAoBvD;;GAEG;AACH,MAAM,UAAU,IAAI,CAClB,OAAuG;IAAvG,wBAAA,EAAA,YAAuG;IAEvG,IAAM,YAAY,GAAG;QACnB,sEAAsE;QACtE,GAAG,EAAE,eAAe,EAAO,CAAC,GAAkB,EAC9C,WAAW,EAAE,IAAI,EACjB,SAAS,EAAE,KAAK,EAChB,OAAO,EAAE,KAAK,IACX,OAAO,KACV,cAAc,aACZ,KAAK,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC,EACtC,OAAO,EAAE,IAAI,EACb,eAAe,EAAE,KAAK,IACnB,OAAO,CAAC,cAAc,IAEd,CAAC;IAEhB,YAAY,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,IAAI,EAAE,CAAC;IACtD,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG;QAC3B,IAAI,EAAE,uBAAuB;QAC7B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,iBAAiB;gBACvB,OAAO,EAAE,WAAW;aACrB;SACF;QACD,OAAO,EAAE,WAAW;KACrB,CAAC;IAEF,WAAW,CAAC,YAAY,CAAC,CAAC;IAC1B,IAAI,YAAY,CAAC,GAAG,KAAK,SAAS,EAAE;QAClC,MAAM,CAAC,IAAI,CAAC,qFAAqF,CAAC,CAAC;QACnG,MAAM,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;KAC9D;SAAM;QACL,IAAM,SAAS,GAAG,IAAI,SAAS,CAAC,YAAY,CAAC,CAAC;QAC9C,SAAS,CAAC,KAAK,EAAE,CAAC;KACnB;AACH,CAAC;AAED,YAAY;AACZ;IASE;;OAEG;IACH,mBAAmB,OAAmB;QAAtC,iBAEC;QAbD;;WAEG;QACc,qBAAgB,GAA8B,EAAE,CAAC;QA+DlE,gGAAgG;QAChG,sDAAsD;QACrC,uBAAkB,GAAG,UAAC,EAAa;YAClD,mCAAmC;YACnC,IAAI,EAAE,CAAC,QAAQ,CAAC,gBAAgB,EAAE;gBAChC,OAAO;aACR;YACD,EAAE,CAAC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAEpC,IAAM,IAAI,GAAG,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YACxC,IAAM,SAAS,GAAG,IAAI,KAAK,mBAAmB,CAAC;YAC/C,IAAM,KAAK,GAA4B,EAAE,CAAC;YAE1C,kDAAkD;YAClD,wDAAwD;YACxD,EAAE;YACF,8DAA8D;YAC9D,6EAA6E;YAC7E,IAAM,WAAW,GAAG,UAAC,IAAU;gBAC7B,IAAM,GAAG,GAAG,eAAe,EAAE,CAAC;gBAE9B,gGAAgG;gBAChG,kEAAkE;gBAClE,IAAI,KAAI,CAAC,SAAS,EAAE;oBAClB,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;iBAC3B;qBAAM;oBACL,EAAE,CAAC,KAAK,CAAC,UAAQ,IAAM,EAAE;wBACvB,wGAAwG;wBACxG,4CAA4C;wBAC5C,IAAM,iBAAiB,GAAG,oBAAoB,EAAE,CAAC;wBACjD,IAAI,iBAAiB,EAAE;4BACrB,KAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC;gCAC5C,WAAW,EAAE,oBAAoB;gCACjC,EAAE,EAAE,KAAK;6BACV,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC;YAEF,IAAM,YAAY,GAAG,UAAC,IAAU,EAAE,SAAoB;gBACpD,iHAAiH;gBACjH,IAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC;oBAC7E,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACjE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC;gBAEjD,IAAM,OAAO,GAAG,KAAI,CAAC,SAAS,IAAI,oBAAoB,EAAE,CAAC;gBAEzD,IAAI,CAAC,OAAO,IAAI,CAAC,WAAW,EAAE;oBAC5B,OAAO;iBACR;gBAED,IAAM,GAAG,GAAG,eAAe,EAAE,CAAC;gBAC9B,IAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;gBAC9B,gGAAgG;gBAChG,kEAAkE;gBAClE,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;iBAC3B;qBAAM;oBACL,EAAE,CAAC,KAAK,CAAC,UAAQ,IAAM,EAAE;wBACvB,IAAI,OAAO,EAAE;4BACX,KAAK,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC;gCACpC,WAAW,EAAE,UAAQ,IAAI,MAAG;gCAC5B,EAAE,EAAE,SAAS;6BACd,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC;YAEF,uFAAuF;YACvF,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,SAAS;gBAClD,mDAAmD;gBACnD,0CAA0C;gBAC1C,IAAM,aAAa,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;gBAEvC,IAAI,CAAC,aAAa,EAAE;oBAClB,MAAM,CAAC,IAAI,CAAC,mBAAiB,SAAW,CAAC,CAAC;oBAC1C,OAAO;iBACR;gBAED,aAAa,CAAC,OAAO,CAAC,UAAA,YAAY;oBAChC,IAAM,OAAO,GAAG,SAAS;wBACvB,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,EAAE,YAAY,CAAC;wBACtC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;oBACrD,IAAM,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;oBAE/C,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;wBAC/B,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAI,OAAO,GAAK,YAAY,CAAC,CAAC;qBACxD;yBAAM,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;wBAC7C,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;qBACrD;yBAAM;wBACL,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;qBACvC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAvJA,IAAI,CAAC,QAAQ,GAAG,OAAyD,CAAC;IAC5E,CAAC;IAED;;OAEG;IACI,yBAAK,GAAZ;QACE,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,kBAAkB,IAAI,IAAI,CAAC,QAAQ,IAAI,eAAe,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC3E,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAED;;OAEG;IACK,qCAAiB,GAAzB,UAA0B,EAAa;QACrC,8FAA8F;QAC9F,IAAI,CAAC,EAAE,EAAE;YACP,OAAO,wBAAwB,CAAC;SACjC;QAED,IAAI,EAAE,CAAC,KAAK,KAAK,EAAE,EAAE;YACnB,OAAO,mBAAmB,CAAC;SAC5B;QAED,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;YAChB,OAAO,wBAAwB,CAAC;SACjC;QAED,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,OAAO,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;SACzB;QAED,IAAI,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE;YAC7B,OAAO,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC;SAClC;QAED,yBAAyB;QACzB,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE;YACtB,IAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACrF,IAAM,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAC/C,OAAO,CACL,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;gBAC/B,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,qBAAqB,EAAE,UAAC,CAAC,EAAE,CAAS;oBACtF,OAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;gBAAxB,CAAwB,CACzB,CAAC,CACH,CAAC;SACH;QAED,OAAO,wBAAwB,CAAC;IAClC,CAAC;IAqGD,2FAA2F;IACnF,mCAAe,GAAvB,UAAwB,SAAiB;QAAzC,iBAYC;QAXC,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACnC;QAED,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;YAC/B,kFAAkF;YAClF,IAAI,KAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACjC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;aAC5B;QACH,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,sEAAsE;IAC9D,iCAAa,GAArB;QACE,IAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAClD,IAAM,mBAAmB,GAAG,UAAU,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,oFAAoF,CAAC,CAAC;QACpG,CAAC,EAAE,GAAG,CAAC,CAAC;QACR,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;YACtB,YAAY,EAAZ;gBACE,YAAY,CAAC,mBAAmB,CAAC,CAAC;gBAClC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,6DAA6D;IACrD,uCAAmB,GAA3B;QAAA,iBA2CC;QA1CC,6DAA6D;QAC7D,IAAM,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;QAElE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,GAAG,UAAC,KAAY,EAAE,EAAc,EAAE,IAAa;YAClF,IAAM,QAAQ,GAAa,EAAE,CAAC;YAE9B,IAAI,EAAE,EAAE;gBACN,IAAI;oBACF,QAAQ,CAAC,aAAa,GAAG,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;oBAEpD,IAAI,KAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;wBAC7B,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC;qBAC5C;iBACF;gBAAC,OAAO,GAAG,EAAE;oBACZ,MAAM,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;iBAC/D;aACF;YAED,IAAI,IAAI,EAAE;gBACR,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC;aAC/B;YAED,oGAAoG;YACpG,UAAU,CAAC;gBACT,aAAa,EAAE,CAAC,SAAS,CAAC,UAAA,KAAK;oBAC7B,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;oBAClC,aAAa,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,OAAO,mBAAmB,KAAK,UAAU,EAAE;gBAC7C,mBAAmB,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;aAC9D;YAED,IAAI,KAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;gBAC3B,IAAI,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE;oBAC1B,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAY,IAAI,aAAM,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE,QAAG,EAAE,EAAE,CAAC,CAAC;iBACrF;gBACD,sCAAsC;gBACtC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACtB;QACH,CAAC,CAAC;IACJ,CAAC;IACH,gBAAC;AAAD,CAAC,AAhPD,IAgPC;AAED,iDAAiD;AACjD,MAAM,UAAU,oBAAoB;;IAClC,aAAO,aAAa,EAAE;SACnB,QAAQ,EAAE,0CACT,cAAc,GAAG;AACvB,CAAC","sourcesContent":["/* eslint-disable max-lines, @typescript-eslint/no-explicit-any */\nimport { BrowserOptions, getCurrentHub, init as browserInit, SDK_VERSION } from '@sentry/browser';\nimport { Span, Transaction } from '@sentry/types';\nimport { basename, getGlobalObject, logger, timestampWithMs } from '@sentry/utils';\n\nexport interface VueOptions extends BrowserOptions {\n  /** Vue instance to be used inside the integration */\n  Vue?: VueInstance;\n\n  /**\n   * When set to `false`, Sentry will suppress reporting of all props data\n   * from your Vue components for privacy concerns.\n   */\n  attachProps?: boolean;\n  /**\n   * When set to `true`, original Vue's `logError` will be called as well.\n   * https://github.com/vuejs/vue/blob/c2b1cfe9ccd08835f2d99f6ce60f67b4de55187f/src/core/util/error.js#L38-L48\n   */\n  logErrors?: boolean;\n\n  /**\n   * Decides whether to track components by hooking into its lifecycle methods.\n   * Can be either set to `boolean` to enable/disable tracking for all of them.\n   * Or to an array of specific component names (case-sensitive).\n   */\n  trackComponents?: boolean | string[];\n\n  /** How long to wait until the tracked root activity is marked as finished and sent of to Sentry */\n  timeout?: number;\n  /**\n   * List of hooks to keep track of during component lifecycle.\n   * Available hooks: 'activate' | 'create' | 'destroy' | 'mount' | 'update'\n   * Based on https://vuejs.org/v2/api/#Options-Lifecycle-Hooks\n   */\n  hooks?: Operation[];\n\n  /** {@link TracingOptions} */\n  tracingOptions: TracingOptions;\n}\n\n/** Global Vue object limited to the methods/attributes we require */\ninterface VueInstance {\n  config: {\n    errorHandler?(error: Error, vm?: ViewModel, info?: string): void;\n  };\n  util?: {\n    warn(...input: any): void;\n  };\n  mixin(hooks: { [key: string]: () => void }): void;\n}\n\n/** Representation of Vue component internals */\ninterface ViewModel {\n  [key: string]: any;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  $root: object;\n  $options: {\n    [key: string]: any;\n    name?: string;\n    propsData?: { [key: string]: any };\n    _componentTag?: string;\n    __file?: string;\n    $_sentryPerfHook?: boolean;\n  };\n  $once(hook: string, cb: () => void): void;\n}\n\n/** Optional metadata attached to Sentry Event */\ninterface Metadata {\n  [key: string]: any;\n  componentName?: string;\n  propsData?: { [key: string]: any };\n  lifecycleHook?: string;\n}\n\n// https://vuejs.org/v2/api/#Options-Lifecycle-Hooks\ntype Hook =\n  | 'activated'\n  | 'beforeCreate'\n  | 'beforeDestroy'\n  | 'beforeMount'\n  | 'beforeUpdate'\n  | 'created'\n  | 'deactivated'\n  | 'destroyed'\n  | 'mounted'\n  | 'updated';\n\ntype Operation = 'activate' | 'create' | 'destroy' | 'mount' | 'update';\n\n// Mappings from operation to corresponding lifecycle hook.\nconst HOOKS: { [key in Operation]: Hook[] } = {\n  activate: ['activated', 'deactivated'],\n  create: ['beforeCreate', 'created'],\n  destroy: ['beforeDestroy', 'destroyed'],\n  mount: ['beforeMount', 'mounted'],\n  update: ['beforeUpdate', 'updated'],\n};\n\nconst COMPONENT_NAME_REGEXP = /(?:^|[-_/])(\\w)/g;\nconst ROOT_COMPONENT_NAME = 'root';\nconst ANONYMOUS_COMPONENT_NAME = 'anonymous component';\n\n/** Vue specific configuration for Tracing Integration  */\ninterface TracingOptions {\n  /**\n   * Decides whether to track components by hooking into its lifecycle methods.\n   * Can be either set to `boolean` to enable/disable tracking for all of them.\n   * Or to an array of specific component names (case-sensitive).\n   */\n  trackComponents: boolean | string[];\n  /** How long to wait until the tracked root activity is marked as finished and sent of to Sentry */\n  timeout: number;\n  /**\n   * List of hooks to keep track of during component lifecycle.\n   * Available hooks: 'activate' | 'create' | 'destroy' | 'mount' | 'update'\n   * Based on https://vuejs.org/v2/api/#Options-Lifecycle-Hooks\n   */\n  hooks: Operation[];\n}\n\n/**\n * Inits the Vue SDK\n */\nexport function init(\n  options: Partial<Omit<VueOptions, 'tracingOptions'> & { tracingOptions: Partial<TracingOptions> }> = {},\n): void {\n  const finalOptions = {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    Vue: getGlobalObject<any>().Vue as VueInstance,\n    attachProps: true,\n    logErrors: false,\n    tracing: false,\n    ...options,\n    tracingOptions: {\n      hooks: ['activate', 'mount', 'update'],\n      timeout: 2000,\n      trackComponents: false,\n      ...options.tracingOptions,\n    },\n  } as VueOptions;\n\n  finalOptions._metadata = finalOptions._metadata || {};\n  finalOptions._metadata.sdk = {\n    name: 'sentry.javascript.vue',\n    packages: [\n      {\n        name: 'npm:@sentry/vue',\n        version: SDK_VERSION,\n      },\n    ],\n    version: SDK_VERSION,\n  };\n\n  browserInit(finalOptions);\n  if (finalOptions.Vue === undefined) {\n    logger.warn('No Vue instance was provided. Also there is no Vue instance on the `window` object.');\n    logger.warn('We will only capture global unhandled errors.');\n  } else {\n    const vueHelper = new VueHelper(finalOptions);\n    vueHelper.setup();\n  }\n}\n\n/** JSDoc */\nclass VueHelper {\n  /**\n   * Cache holding already processed component names\n   */\n  private readonly _componentsCache: { [key: string]: string } = {};\n  private _rootSpan?: Span;\n  private _rootSpanTimer?: ReturnType<typeof setTimeout>;\n  private _options: Omit<VueOptions, 'Vue'> & { Vue: VueInstance };\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: VueOptions) {\n    this._options = options as Omit<VueOptions, 'Vue'> & { Vue: VueInstance };\n  }\n\n  /**\n   * Attaches the error handler and starts tracing\n   */\n  public setup(): void {\n    this._attachErrorHandler();\n\n    if ('tracesSampleRate' in this._options || 'tracesSampler' in this._options) {\n      this._startTracing();\n    }\n  }\n\n  /**\n   * Extract component name from the ViewModel\n   */\n  private _getComponentName(vm: ViewModel): string {\n    // Such level of granularity is most likely not necessary, but better safe than sorry. — Kamil\n    if (!vm) {\n      return ANONYMOUS_COMPONENT_NAME;\n    }\n\n    if (vm.$root === vm) {\n      return ROOT_COMPONENT_NAME;\n    }\n\n    if (!vm.$options) {\n      return ANONYMOUS_COMPONENT_NAME;\n    }\n\n    if (vm.$options.name) {\n      return vm.$options.name;\n    }\n\n    if (vm.$options._componentTag) {\n      return vm.$options._componentTag;\n    }\n\n    // injected by vue-loader\n    if (vm.$options.__file) {\n      const unifiedFile = vm.$options.__file.replace(/^[a-zA-Z]:/, '').replace(/\\\\/g, '/');\n      const filename = basename(unifiedFile, '.vue');\n      return (\n        this._componentsCache[filename] ||\n        (this._componentsCache[filename] = filename.replace(COMPONENT_NAME_REGEXP, (_, c: string) =>\n          c ? c.toUpperCase() : '',\n        ))\n      );\n    }\n\n    return ANONYMOUS_COMPONENT_NAME;\n  }\n\n  /** Keep it as attribute function, to keep correct `this` binding inside the hooks callbacks  */\n  // eslint-disable-next-line @typescript-eslint/typedef\n  private readonly _applyTracingHooks = (vm: ViewModel): void => {\n    // Don't attach twice, just in case\n    if (vm.$options.$_sentryPerfHook) {\n      return;\n    }\n    vm.$options.$_sentryPerfHook = true;\n\n    const name = this._getComponentName(vm);\n    const rootMount = name === ROOT_COMPONENT_NAME;\n    const spans: { [key: string]: Span } = {};\n\n    // Render hook starts after once event is emitted,\n    // but it ends before the second event of the same type.\n    //\n    // Because of this, we start measuring inside the first event,\n    // but finish it before it triggers, to skip the event emitter timing itself.\n    const rootHandler = (hook: Hook): void => {\n      const now = timestampWithMs();\n\n      // On the first handler call (before), it'll be undefined, as `$once` will add it in the future.\n      // However, on the second call (after), it'll be already in place.\n      if (this._rootSpan) {\n        this._finishRootSpan(now);\n      } else {\n        vm.$once(`hook:${hook}`, () => {\n          // Create an activity on the first event call. There'll be no second call, as rootSpan will be in place,\n          // thus new event handler won't be attached.\n          const activeTransaction = getActiveTransaction();\n          if (activeTransaction) {\n            this._rootSpan = activeTransaction.startChild({\n              description: 'Application Render',\n              op: 'Vue',\n            });\n          }\n        });\n      }\n    };\n\n    const childHandler = (hook: Hook, operation: Operation): void => {\n      // Skip components that we don't want to track to minimize the noise and give a more granular control to the user\n      const shouldTrack = Array.isArray(this._options.tracingOptions.trackComponents)\n        ? this._options.tracingOptions.trackComponents.indexOf(name) > -1\n        : this._options.tracingOptions.trackComponents;\n\n      const childOf = this._rootSpan || getActiveTransaction();\n\n      if (!childOf || !shouldTrack) {\n        return;\n      }\n\n      const now = timestampWithMs();\n      const span = spans[operation];\n      // On the first handler call (before), it'll be undefined, as `$once` will add it in the future.\n      // However, on the second call (after), it'll be already in place.\n      if (span) {\n        span.finish();\n        this._finishRootSpan(now);\n      } else {\n        vm.$once(`hook:${hook}`, () => {\n          if (childOf) {\n            spans[operation] = childOf.startChild({\n              description: `Vue <${name}>`,\n              op: operation,\n            });\n          }\n        });\n      }\n    };\n\n    // Each component has it's own scope, so all activities are only related to one of them\n    this._options.tracingOptions.hooks.forEach(operation => {\n      // Retrieve corresponding hooks from Vue lifecycle.\n      // eg. mount => ['beforeMount', 'mounted']\n      const internalHooks = HOOKS[operation];\n\n      if (!internalHooks) {\n        logger.warn(`Unknown hook: ${operation}`);\n        return;\n      }\n\n      internalHooks.forEach(internalHook => {\n        const handler = rootMount\n          ? rootHandler.bind(this, internalHook)\n          : childHandler.bind(this, internalHook, operation);\n        const currentValue = vm.$options[internalHook];\n\n        if (Array.isArray(currentValue)) {\n          vm.$options[internalHook] = [handler, ...currentValue];\n        } else if (typeof currentValue === 'function') {\n          vm.$options[internalHook] = [handler, currentValue];\n        } else {\n          vm.$options[internalHook] = [handler];\n        }\n      });\n    });\n  };\n\n  /** Finish top-level span and activity with a debounce configured using `timeout` option */\n  private _finishRootSpan(timestamp: number): void {\n    if (this._rootSpanTimer) {\n      clearTimeout(this._rootSpanTimer);\n    }\n\n    this._rootSpanTimer = setTimeout(() => {\n      // We should always finish the span, only should pop activity if using @sentry/apm\n      if (this._rootSpan) {\n        this._rootSpan.finish(timestamp);\n        this._rootSpan = undefined;\n      }\n    }, this._options.tracingOptions.timeout);\n  }\n\n  /** Inject configured tracing hooks into Vue's component lifecycles */\n  private _startTracing(): void {\n    const applyTracingHooks = this._applyTracingHooks;\n    const appliedTracingHooks = setTimeout(() => {\n      logger.warn(\"Didn't apply tracing hooks, make sure you call Sentry.init before initialzing Vue!\");\n    }, 500);\n    this._options.Vue.mixin({\n      beforeCreate(this: ViewModel): void {\n        clearTimeout(appliedTracingHooks);\n        applyTracingHooks(this);\n      },\n    });\n  }\n\n  /** Inject Sentry's handler into owns Vue's error handler  */\n  private _attachErrorHandler(): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const currentErrorHandler = this._options.Vue.config.errorHandler;\n\n    this._options.Vue.config.errorHandler = (error: Error, vm?: ViewModel, info?: string): void => {\n      const metadata: Metadata = {};\n\n      if (vm) {\n        try {\n          metadata.componentName = this._getComponentName(vm);\n\n          if (this._options.attachProps) {\n            metadata.propsData = vm.$options.propsData;\n          }\n        } catch (_oO) {\n          logger.warn('Unable to extract metadata from Vue component.');\n        }\n      }\n\n      if (info) {\n        metadata.lifecycleHook = info;\n      }\n\n      // Capture exception in the next event loop, to make sure that all breadcrumbs are recorded in time.\n      setTimeout(() => {\n        getCurrentHub().withScope(scope => {\n          scope.setContext('vue', metadata);\n          getCurrentHub().captureException(error);\n        });\n      });\n\n      if (typeof currentErrorHandler === 'function') {\n        currentErrorHandler.call(this._options.Vue, error, vm, info);\n      }\n\n      if (this._options.logErrors) {\n        if (this._options.Vue.util) {\n          this._options.Vue.util.warn(`Error in ${info}: \"${error && error.toString()}\"`, vm);\n        }\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    };\n  }\n}\n\n/** Grabs active transaction off scope, if any */\nexport function getActiveTransaction(): Transaction | undefined {\n  return getCurrentHub()\n    .getScope()\n    ?.getTransaction();\n}\n"]}