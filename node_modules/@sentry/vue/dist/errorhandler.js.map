{"version":3,"file":"errorhandler.js","sourceRoot":"","sources":["../../src/errorhandler.ts"],"names":[],"mappings":";AAAA,2CAAgD;AAEhD,2CAA2E;AAK9D,QAAA,kBAAkB,GAAG,UAAC,GAAQ,EAAE,OAAgB;IACrD,IAAA,eAAkD,EAAhD,8BAAY,EAAE,4BAAW,EAAE,kBAAqB,CAAC;IAEzD,GAAG,CAAC,MAAM,CAAC,YAAY,GAAG,UAAC,KAAY,EAAE,EAAa,EAAE,aAAqB;QAC3E,IAAM,aAAa,GAAG,gCAAmB,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QACrD,IAAM,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,mCAAsB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACnD,IAAM,QAAQ,GAA4B;YACxC,aAAa,eAAA;YACb,aAAa,eAAA;YACb,KAAK,OAAA;SACN,CAAC;QAEF,IAAI,EAAE,IAAI,OAAO,CAAC,WAAW,EAAE;YAC7B,4BAA4B;YAC5B,gBAAgB;YAChB,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAS,IAAI,EAAE,CAAC,MAAM,CAAC;SACzD;QAED,oGAAoG;QACpG,UAAU,CAAC;YACT,uBAAa,EAAE,CAAC,SAAS,CAAC,UAAA,KAAK;gBAC7B,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBAClC,uBAAa,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;YACrC,YAA4B,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC;SACnE;QAED,IAAI,OAAO,CAAC,SAAS,EAAE;YACrB,IAAM,UAAU,GAAG,OAAO,OAAO,KAAK,WAAW,CAAC;YAClD,IAAM,OAAO,GAAG,cAAY,aAAa,aAAM,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE,QAAG,CAAC;YAE5E,IAAI,WAAW,EAAE;gBACd,WAA2B,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;aAC7D;iBAAM,IAAI,UAAU,IAAI,CAAC,MAAM,EAAE;gBAChC,sCAAsC;gBACtC,OAAO,CAAC,KAAK,CAAC,iBAAe,OAAO,GAAG,KAAO,CAAC,CAAC;aACjD;SACF;IACH,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { getCurrentHub } from '@sentry/browser';\n\nimport { formatComponentName, generateComponentTrace } from './components';\nimport { Options, ViewModel, Vue } from './types';\n\ntype UnknownFunc = (...args: unknown[]) => void;\n\nexport const attachErrorHandler = (app: Vue, options: Options): void => {\n  const { errorHandler, warnHandler, silent } = app.config;\n\n  app.config.errorHandler = (error: Error, vm: ViewModel, lifecycleHook: string): void => {\n    const componentName = formatComponentName(vm, false);\n    const trace = vm ? generateComponentTrace(vm) : '';\n    const metadata: Record<string, unknown> = {\n      componentName,\n      lifecycleHook,\n      trace,\n    };\n\n    if (vm && options.attachProps) {\n      // Vue2 - $options.propsData\n      // Vue3 - $props\n      metadata.propsData = vm.$options.propsData || vm.$props;\n    }\n\n    // Capture exception in the next event loop, to make sure that all breadcrumbs are recorded in time.\n    setTimeout(() => {\n      getCurrentHub().withScope(scope => {\n        scope.setContext('vue', metadata);\n        getCurrentHub().captureException(error);\n      });\n    });\n\n    if (typeof errorHandler === 'function') {\n      (errorHandler as UnknownFunc).call(app, error, vm, lifecycleHook);\n    }\n\n    if (options.logErrors) {\n      const hasConsole = typeof console !== 'undefined';\n      const message = `Error in ${lifecycleHook}: \"${error && error.toString()}\"`;\n\n      if (warnHandler) {\n        (warnHandler as UnknownFunc).call(null, message, vm, trace);\n      } else if (hasConsole && !silent) {\n        // eslint-disable-next-line no-console\n        console.error(`[Vue warn]: ${message}${trace}`);\n      }\n    }\n  };\n};\n"]}