{"version":3,"file":"router.js","sourceRoot":"","sources":["../../src/router.ts"],"names":[],"mappings":";AAAA,uDAAuD;AACvD,2CAAmD;AAsBnD;;;;GAIG;AACH,SAAgB,wBAAwB,CAAC,MAAiB;IACxD,OAAO,UACL,gBAA0E,EAC1E,0BAA0C,EAC1C,gCAAgD;QADhD,2CAAA,EAAA,iCAA0C;QAC1C,iDAAA,EAAA,uCAAgD;QAEhD,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,0BAAgB,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC;QAEjD,MAAM,CAAC,UAAU,CAAC,UAAC,EAAE,EAAE,IAAI,EAAE,IAAI;YAC/B,4GAA4G;YAC5G,sDAAsD;YACtD,oDAAoD;YAEpD,cAAc;YACd,mBAAmB;YACnB,IAAM,oBAAoB,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC;YAE5E,IAAM,IAAI,GAAG;gBACX,yBAAyB,EAAE,YAAY;aACxC,CAAC;YACF,IAAM,IAAI,GAAG;gBACX,MAAM,EAAE,EAAE,CAAC,MAAM;gBACjB,KAAK,EAAE,EAAE,CAAC,KAAK;aAChB,CAAC;YAEF,IAAI,0BAA0B,IAAI,oBAAoB,EAAE;gBACtD,gBAAgB,CAAC;oBACf,sEAAsE;oBACtE,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI;oBAChD,EAAE,EAAE,UAAU;oBACd,IAAI,MAAA;oBACJ,IAAI,MAAA;iBACL,CAAC,CAAC;aACJ;YAED,IAAI,gCAAgC,IAAI,CAAC,oBAAoB,EAAE;gBAC7D,gBAAgB,CAAC;oBACf,sEAAsE;oBACtE,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI;oBACzF,EAAE,EAAE,YAAY;oBAChB,IAAI,MAAA;oBACJ,IAAI,MAAA;iBACL,CAAC,CAAC;aACJ;YAED,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAhDD,4DAgDC","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { captureException } from '@sentry/browser';\nimport { Transaction, TransactionContext } from '@sentry/types';\n\nexport type VueRouterInstrumentation = <T extends Transaction>(\n  startTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad?: boolean,\n  startTransactionOnLocationChange?: boolean,\n) => void;\n\n// This is not great, but kinda necessary to make it work with VueRouter@3 and VueRouter@4 at the same time.\ntype Route = {\n  params: any;\n  query: any;\n  name?: any;\n  path: any;\n  matched: any[];\n};\ninterface VueRouter {\n  onError: (fn: (err: Error) => void) => void;\n  beforeEach: (fn: (to: Route, from: Route, next: () => void) => void) => void;\n}\n\n/**\n * Creates routing instrumentation for Vue Router v2\n *\n * @param router The Vue Router instance that is used\n */\nexport function vueRouterInstrumentation(router: VueRouter): VueRouterInstrumentation {\n  return (\n    startTransaction: (context: TransactionContext) => Transaction | undefined,\n    startTransactionOnPageLoad: boolean = true,\n    startTransactionOnLocationChange: boolean = true,\n  ) => {\n    router.onError(error => captureException(error));\n\n    router.beforeEach((to, from, next) => {\n      // According to docs we could use `from === VueRouter.START_LOCATION` but I couldnt get it working for Vue 2\n      // https://router.vuejs.org/api/#router-start-location\n      // https://next.router.vuejs.org/api/#start-location\n\n      // Vue2 - null\n      // Vue3 - undefined\n      const isPageLoadNavigation = from.name == null && from.matched.length === 0;\n\n      const tags = {\n        'routing.instrumentation': 'vue-router',\n      };\n      const data = {\n        params: to.params,\n        query: to.query,\n      };\n\n      if (startTransactionOnPageLoad && isPageLoadNavigation) {\n        startTransaction({\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          name: (to.name && to.name.toString()) || to.path,\n          op: 'pageload',\n          tags,\n          data,\n        });\n      }\n\n      if (startTransactionOnLocationChange && !isPageLoadNavigation) {\n        startTransaction({\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          name: (to.name && to.name.toString()) || (to.matched[0] && to.matched[0].path) || to.path,\n          op: 'navigation',\n          tags,\n          data,\n        });\n      }\n\n      next();\n    });\n  };\n}\n"]}