{"version":3,"file":"sdk.js","sourceRoot":"","sources":["../src/sdk.ts"],"names":[],"mappings":";;AAAA,2CAAmE;AACnE,uCAAwD;AAExD,+CAAoD;AACpD,qCAAgD;AAGhD,IAAM,cAAc,GAAY;IAC9B,GAAG,EAAE,uBAAe,EAAgB,CAAC,GAAG;IACxC,WAAW,EAAE,IAAI;IACjB,SAAS,EAAE,KAAK;IAChB,KAAK,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC;IACtC,OAAO,EAAE,IAAI;IACb,eAAe,EAAE,KAAK;IACtB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,IAAI,EAAE,uBAAuB;YAC7B,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,iBAAiB;oBACvB,OAAO,EAAE,qBAAW;iBACrB;aACF;YACD,OAAO,EAAE,qBAAW;SACrB;KACF;CACF,CAAC;AAEF;;GAEG;AACH,SAAgB,IAAI,CAClB,MAAmG;IAAnG,uBAAA,EAAA,WAAmG;IAEnG,IAAM,OAAO,yCACR,cAAc,GACd,MAAM,CACV,CAAC;IAEF,cAAW,CAAC,OAAO,CAAC,CAAC;IAErB,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;QAChC,cAAM,CAAC,IAAI,CACT,gEAAgE;YAC9D,qEAAqE;YACrE,0EAA0E,CAC7E,CAAC;QACF,OAAO;KACR;IAED,IAAI,OAAO,CAAC,GAAG,EAAE;QACf,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;KAC/B;SAAM,IAAI,OAAO,CAAC,GAAG,EAAE;QACtB,IAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACtE,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG,IAAI,OAAA,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,EAArB,CAAqB,CAAC,CAAC;KAC5C;AACH,CAAC;AAzBD,oBAyBC;AAED,IAAM,OAAO,GAAG,UAAC,GAAQ,EAAE,OAAgB;IACzC,iCAAkB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAEjC,IAAI,kBAAkB,IAAI,OAAO,IAAI,eAAe,IAAI,OAAO,EAAE;QAC/D,GAAG,CAAC,KAAK,CACP,6BAAmB,uCACd,OAAO,GACP,OAAO,CAAC,cAAc,EACzB,CACH,CAAC;KACH;AACH,CAAC,CAAC","sourcesContent":["import { init as browserInit, SDK_VERSION } from '@sentry/browser';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\nimport { attachErrorHandler } from './errorhandler';\nimport { createTracingMixins } from './tracing';\nimport { Options, TracingOptions, Vue } from './types';\n\nconst DEFAULT_CONFIG: Options = {\n  Vue: getGlobalObject<{ Vue: Vue }>().Vue,\n  attachProps: true,\n  logErrors: false,\n  hooks: ['activate', 'mount', 'update'],\n  timeout: 2000,\n  trackComponents: false,\n  _metadata: {\n    sdk: {\n      name: 'sentry.javascript.vue',\n      packages: [\n        {\n          name: 'npm:@sentry/vue',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    },\n  },\n};\n\n/**\n * Inits the Vue SDK\n */\nexport function init(\n  config: Partial<Omit<Options, 'tracingOptions'> & { tracingOptions: Partial<TracingOptions> }> = {},\n): void {\n  const options = {\n    ...DEFAULT_CONFIG,\n    ...config,\n  };\n\n  browserInit(options);\n\n  if (!options.Vue && !options.app) {\n    logger.warn(\n      'Misconfigured SDK. Vue specific errors will not be captured.\\n' +\n        'Update your `Sentry.init` call with an appropriate config option:\\n' +\n        '`app` (Application Instance - Vue 3) or `Vue` (Vue Constructor - Vue 2).',\n    );\n    return;\n  }\n\n  if (options.Vue) {\n    vueInit(options.Vue, options);\n  } else if (options.app) {\n    const apps = Array.isArray(options.app) ? options.app : [options.app];\n    apps.forEach(app => vueInit(app, options));\n  }\n}\n\nconst vueInit = (app: Vue, options: Options): void => {\n  attachErrorHandler(app, options);\n\n  if ('tracesSampleRate' in options || 'tracesSampler' in options) {\n    app.mixin(\n      createTracingMixins({\n        ...options,\n        ...options.tracingOptions,\n      }),\n    );\n  }\n};\n"]}