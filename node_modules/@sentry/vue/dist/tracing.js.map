{"version":3,"file":"tracing.js","sourceRoot":"","sources":["../src/tracing.ts"],"names":[],"mappings":"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","sourcesContent":["import { getCurrentHub } from '@sentry/browser';\nimport { Span, Transaction } from '@sentry/types';\nimport { logger, timestampInSeconds } from '@sentry/utils';\n\nimport { formatComponentName } from './components';\nimport { Hook, Operation, TracingOptions, ViewModel, Vue } from './types';\n\ntype Mixins = Parameters<Vue['mixin']>[0];\n\ninterface VueSentry extends ViewModel {\n  readonly $root: VueSentry;\n  $_sentrySpans?: {\n    [key: string]: Span;\n  };\n  $_sentryRootSpan?: Span;\n}\n\n// Mappings from operation to corresponding lifecycle hook.\nconst HOOKS: { [key in Operation]: Hook[] } = {\n  activate: ['activated', 'deactivated'],\n  create: ['beforeCreate', 'created'],\n  destroy: ['beforeDestroy', 'destroyed'],\n  mount: ['beforeMount', 'mounted'],\n  update: ['beforeUpdate', 'updated'],\n};\nlet ROOT_SPAN_TIMER: ReturnType<typeof setTimeout>;\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(): Transaction | undefined {\n  return getCurrentHub()\n    .getScope()\n    ?.getTransaction();\n}\n\n/** Finish top-level span and activity with a debounce configured using `timeout` option */\nfunction finishRootSpan(vm: VueSentry, timestamp: number, timeout: number): void {\n  if (ROOT_SPAN_TIMER) {\n    clearTimeout(ROOT_SPAN_TIMER);\n  }\n\n  ROOT_SPAN_TIMER = setTimeout(() => {\n    if (vm.$root?.$_sentryRootSpan) {\n      vm.$root.$_sentryRootSpan.finish(timestamp);\n      vm.$root.$_sentryRootSpan = undefined;\n    }\n  }, timeout);\n}\n\nexport const createTracingMixins = (options: TracingOptions): Mixins => {\n  const { hooks } = options;\n\n  const mixins: Mixins = {};\n\n  for (const operation of hooks) {\n    // Retrieve corresponding hooks from Vue lifecycle.\n    // eg. mount => ['beforeMount', 'mounted']\n    const internalHooks = HOOKS[operation];\n    if (!internalHooks) {\n      logger.warn(`Unknown hook: ${operation}`);\n      continue;\n    }\n\n    for (const internalHook of internalHooks) {\n      mixins[internalHook] = function(this: VueSentry) {\n        const isRoot = this.$root === this;\n\n        if (isRoot) {\n          const activeTransaction = getActiveTransaction();\n          if (activeTransaction) {\n            this.$_sentryRootSpan =\n              this.$_sentryRootSpan ||\n              activeTransaction.startChild({\n                description: 'Application Render',\n                op: 'Vue',\n              });\n          }\n        }\n\n        // Skip components that we don't want to track to minimize the noise and give a more granular control to the user\n        const name = formatComponentName(this, false);\n        const shouldTrack = Array.isArray(options.trackComponents)\n          ? options.trackComponents.includes(name)\n          : options.trackComponents;\n\n        // We always want to track root component\n        if (!isRoot && !shouldTrack) {\n          return;\n        }\n\n        this.$_sentrySpans = this.$_sentrySpans || {};\n\n        // On the first handler call (before), it'll be undefined, as `$once` will add it in the future.\n        // However, on the second call (after), it'll be already in place.\n        const span = this.$_sentrySpans[operation];\n\n        if (span) {\n          span.finish();\n          finishRootSpan(this, timestampInSeconds(), options.timeout);\n        } else {\n          const activeTransaction = this.$root?.$_sentryRootSpan || getActiveTransaction();\n          if (activeTransaction) {\n            this.$_sentrySpans[operation] = activeTransaction.startChild({\n              description: `Vue <${name}>`,\n              op: operation,\n            });\n          }\n        }\n      };\n    }\n  }\n\n  return mixins;\n};\n"]}