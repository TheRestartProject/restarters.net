FROM php:8.1-fpm

# Arguments defined in docker-compose.yml
ARG user
ARG uid

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    default-mysql-client \
    libgmp-dev \
    libjpeg62-turbo-dev \
    libpq-dev \
    vim

# Install Node.js and npm (using NodeSource repository for cross-platform compatibility)
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Install XMLRPC extension
RUN apt-get update && apt-get install -y \
    libxmlrpc-core-c3-dev \
    && pecl install xmlrpc-1.0.0RC3 \
    && docker-php-ext-enable xmlrpc

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-configure gd --with-jpeg && \
    docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd zip gmp

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u $uid -d /home/$user $user || echo "User already exists"
RUN mkdir -p /home/$user/.composer && \
    chown -R $user:$user /home/$user || echo "Home directory already exists"

# Set working directory
WORKDIR /var/www

# Create directory for custom PHP configuration
RUN mkdir -p /usr/local/etc/php/conf.d

# Copy custom php.ini settings if the file exists
COPY docker/php/php.ini /usr/local/etc/php/conf.d/custom.ini

# Create entrypoint script
COPY docker/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Switch to non-root user
USER $user

EXPOSE 9000

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["php-fpm"] 